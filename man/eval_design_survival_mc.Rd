% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/eval_design_survival_mc.R
\name{eval_design_survival_mc}
\alias{eval_design_survival_mc}
\title{Evaluate Power for Survival Design}
\usage{
eval_design_survival_mc(RunMatrix, model, alpha, nsim = 1000,
  distribution = "gaussian", censorpoint = NA, censortype = "right",
  rfunctionsurv = NULL, anticoef = NULL, delta = 2,
  contrasts = contr.sum, parallel = FALSE, ...)
}
\arguments{
\item{RunMatrix}{The run matrix of the design.}

\item{model}{The model used in the evaluation.}

\item{alpha}{The type-I error.}

\item{nsim}{Default 1000. The number of simulations.}

\item{distribution}{Default "gaussian". Distribution of survival function.}

\item{censorpoint}{Default NA for no censoring. The point after/before (for right censored or left censored data, respectively)
which data should be labelled as censored.}

\item{censortype}{Default "right". The type of censoring (either "left" or "right")}

\item{rfunctionsurv}{Default NULL. Random number generator function. Should be a function of the form f(X,b), where X is the
model matrix and b are the anticipated coefficients. This function should return a Surv object from
the survival package. This is available if the user wants to add their own distribution not interally supported
or modify the existing random generation functions.}

\item{anticoef}{The anticipated coefficients for calculating the power. If missing, coefficients
will be automatically generated based on the delta argument.}

\item{delta}{The signal-to-noise ratio. Default 2. This specifies the difference between the high
and low levels. If you do not specify anticoef, the anticipated coefficients will be half of delta}

\item{contrasts}{Function used to generate the contrasts encoding for categorical variables. Default contr.sum.}

\item{parallel}{Default FALSE. If TRUE, uses all cores available to speed up computation of power.}

\item{...}{Any additional arguments to be input into the survreg function during fitting.}
}
\value{
A data frame consisting of the parameters and their powers. The parameter estimates from the simulations are
stored in the 'estimates' attribute.
}
\description{
Evaluates power for a right censored survival design with a Monte Carlo simulation,
using the survival package and survreg to fit the data.
}
\examples{
#These examples focus on the survival analysis case and assume familiarity
#with the basic functionality of eval_design_mc.

#We first generate simple 2-level design using expand.grid:
basicdesign = expand.grid(a=c(-1, 1))
design = gen_design(candidateset=basicdesign, model=~a, trials=15)

#We can then evaluate the power of the design in the same way as eval_design_mc,
#now including the type of censoring (either right or left) and the point at which
#the data should be censored:

eval_design_survival_mc(RunMatrix=design, model=~a, alpha=0.05,
                       nsim=100, distribution="exponential",
                       censorpoint=5,censortype="right")

#Built-in Monte Carlo random generating functions are included for the gaussian, exponential,
#and lognormal distributions.

#We can also evaluate different censored distributions by specifying a custom
#random generating function and changing the distribution argument. You can also
#specify any additional arguments at the end of the function call and they will be
#input into the survreg function when it evaluates.

rlognorm = function(X, b) {
 Y = rlnorm(n=nrow(X), meanlog = X \%*\% b, sdlog = 0.4)
 censored = Y > 1.2
 Y[censored] = 1.2
 return(Surv(time=Y, event=!censored, type="right"))
}

#Any additional arguments are passed into the survreg function call.  As an example, you
#might want to fix the "scale" argument to survreg, when fitting a lognormal:

eval_design_survival_mc(RunMatrix=design, model=~a, alpha=0.2, nsim=100,
                       distribution="lognormal", rfunctionsurv=rlognorm,
                       anticoef=c(0.184,0.101), delta=2, scale=0.4)
}

